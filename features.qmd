---
output: html_document
editor_options: 
  chunk_output_type: console
---

::: {.content-visible when-profile="russian"} 

## Признаки

```{r}
#| echo: false
#| message: false

library(tidyverse)
library(DT)

db <- readxl::read_xlsx("data/data.xlsx")

db |>
  mutate(standardness = if_else(non_standard == 0, 'носители, недопускающие частотные/нелитературные формы', 'носители, допускающие частотные/нелитературные формы'),
         feature_id0 = sprintf(str_c("%0", nchar(max(feature_id)), "d_"), feature_id))  |> 
  group_by(feature_id) |> 
  mutate(fully_st = sum(non_standard == 0),
         n_fully_st = sum(non_standard != 0),
         standardness = str_c(n_fully_st, " из ", fully_st+n_fully_st, " носителей"),
         filename = str_replace_all(feature_title, "[\\s:\\./]", "_"),
         filename = str_replace_all(filename, "č", "ch"),
         filename = str_replace_all(filename, "š", "sh"),
         filename = str_replace_all(filename, "ž", "zh"),
         filename = str_remove_all(filename, "\\*"),
         filename = str_to_lower(filename),
         filename = str_c(feature_id0, filename),
         feature_title_ru = str_c("<a href='source/ru/",
                               filename,
                               ".html'>",
                               feature_title_ru,
                               "</a>"),
         for_sorting = n_fully_st/fully_st) |>
  ungroup() |> 
  arrange(-for_sorting) |> 
  select(feature_title_ru, standardness, contributor_ru) |> 
  rename(`название признака` = feature_title_ru,
         `вариативные носители` = standardness,
         `исследователи` = contributor_ru) |> 
  distinct() |>
  DT::datatable(filter = 'top', 
                escape = FALSE,
                rownames = FALSE,
                options = list(pageLength = 150, 
                               autoWidth = TRUE,
                               dom = 'fltpi'))
```

:::

::: {.content-visible when-profile="english"} 

## Features

```{r}
#| echo: false
#| message: false

library(tidyverse)
library(DT)

# table with features
db <- readxl::read_xlsx("data/data.xlsx")

db |>
  mutate(standardness = if_else(non_standard == 0, 'fully standard speakers', 'non-fully standard speakers'),
         feature_id0 = sprintf(str_c("%0", nchar(max(feature_id)), "d_"), feature_id))  |> 
  group_by(feature_id) |> 
  mutate(fully_st = sum(non_standard == 0),
         n_fully_st = sum(non_standard != 0),
         standardness = str_c(n_fully_st, " out of ", n_fully_st+fully_st, " speakers"),
         filename = str_replace_all(feature_title, "[\\s:\\./]", "_"),
         filename = str_replace_all(filename, "č", "ch"),
         filename = str_replace_all(filename, "š", "sh"),
         filename = str_replace_all(filename, "ž", "zh"),
         filename = str_remove_all(filename, "\\*"),
         filename = str_to_lower(filename),
         filename = str_c(feature_id0, filename),
         feature_title = str_c("<a href='source/en/",
                               filename,
                               ".html'>",
                               feature_title,
                               "</a>"),
         for_sorting = n_fully_st/fully_st) |>
  ungroup() |> 
  arrange(-for_sorting) |> 
  select(feature_title, standardness, contributor) |>
  rename(feature = feature_title,
         `speakers with variation` = standardness) |> 
  distinct() |>
  DT::datatable(filter = 'top', 
                escape = FALSE,
                rownames = FALSE,
                options = list(pageLength = 150, 
                               autoWidth = TRUE,
                               dom = 'fltpi'))
```

:::